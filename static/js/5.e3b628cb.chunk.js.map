{"version":3,"sources":["components/Order/Order.module.css","store/actions/myOrdersActions.js","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","fetchOrders","token","userId","dispatch","type","actionTypes","queryParams","axios","get","then","res","orders","fetchedOrders","key","data","push","id","catch","error","Order","props","className","classes","Object","keys","ingredients","map","igKey","price","toFixed","Orders","this","onFetchOrders","loading","Spinner","order","Component","connect","state","myOrders","auth","myOrdersActions","withErrorHandler"],"mappings":"mGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,sICqBbC,EAAc,SAACC,EAAOC,GACjC,OAAO,SAAAC,GACLA,EAPK,CACLC,KAAMC,MAON,IAAMC,EAAW,gBAAYL,EAAZ,sCAA+CC,EAA/C,KACjBK,IACGC,IAAI,eAAiBF,GACrBG,MAAK,SAAAC,GACJ,IA1BmBC,EA0BbC,EAAgB,GACtB,IAAK,IAAIC,KAAOH,EAAII,KAClBF,EAAcG,KAAd,eACKL,EAAII,KAAKD,GADd,CAEEG,GAAIH,KAGRV,GAjCmBQ,EAiCSC,EAhC3B,CACLR,KAAMC,IACNM,eAgCGM,OAAM,SAAAC,GACLf,EA5BC,CACLC,KAAMC,W,kBCKKc,EAdD,SAAAC,GAAK,OACjB,yBAAKC,UAAWC,IAAQH,OACtB,0CACc,6BACXI,OAAOC,KAAKJ,EAAMK,aAAaC,KAAI,SAAAC,GAAK,OACvC,0BAAMd,IAAKc,GAAX,UAAsBA,EAAtB,aAAgCP,EAAMK,YAAYE,GAAlD,UAGJ,qCACS,uCAAaP,EAAMQ,MAAMC,QAAQ,O,QCHxCC,E,4LAEFC,KAAKX,MAAMY,cAAcD,KAAKX,MAAMnB,MAAO8B,KAAKX,MAAMlB,U,+BAItD,OAAI6B,KAAKX,MAAMa,QAAgB,kBAACC,EAAA,EAAD,MAE7B,6BACGH,KAAKX,MAAMT,OAAOe,KAAI,SAAAS,GAAK,OAC1B,kBAAC,EAAD,CACEtB,IAAKsB,EAAMnB,GACXS,YAAaU,EAAMV,YACnBG,MAAOO,EAAMP,gB,GAbJQ,aAqCNC,uBAhBS,SAAAC,GACtB,MAAO,CACL3B,OAAQ2B,EAAMC,SAAS5B,OACvBsB,QAASK,EAAMC,SAASN,QACxBhC,MAAOqC,EAAME,KAAKvC,MAClBC,OAAQoC,EAAME,KAAKtC,WAII,SAAAC,GACzB,MAAO,CACL6B,cAAe,SAAC/B,EAAOC,GAAR,OACbC,EAASsC,EAA4BxC,EAAOC,QAInCmC,CAGbK,YAAiBZ,EAAQvB","file":"static/js/5.e3b628cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nconst fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\n\nconst fetchOrdersFail = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL\n  };\n};\n\nconst fetchOrdersInit = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_INIT\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersInit());\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(error => {\n        dispatch(fetchOrdersFail());\n      });\n  };\n};\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst Order = props => (\n  <div className={classes.Order}>\n    <p>\n      Ingredients <br />\n      {Object.keys(props.ingredients).map(igKey => (\n        <span key={igKey}>{`${igKey} (${props.ingredients[igKey]})`}</span>\n      ))}\n    </p>\n    <p>\n      Price: <strong>USD {props.price.toFixed(2)}</strong>\n    </p>\n  </div>\n);\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as myOrdersActions from \"../../store/actions/myOrdersActions\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    if (this.props.loading) return <Spinner />;\n    return (\n      <div>\n        {this.props.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.myOrders.orders,\n    loading: state.myOrders.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(myOrdersActions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n"],"sourceRoot":""}