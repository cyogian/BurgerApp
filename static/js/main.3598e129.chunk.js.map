{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","store/utility.js","store/reducers/burgerBuilderReducer.js","store/actions/actionTypes.js","store/reducers/orderReducer.js","store/reducers/myOrdersReducer.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilderActions.js","store/actions/orderActions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/myOrdersActions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","updateObject","oldObject","updatedProperties","INGREDIENT_PRICES","bacon","cheese","meat","salad","initialState","ingredients","totalPrice","error","addIngredient","state","action","updatedIngredient","ingredientName","updatedState","removeIngredient","setIngredients","Object","keys","reduce","igKey","reducer","type","inititalState","orders","loading","purchased","purchaseBurgerSuccess","newOrder","id","concat","Logo","props","className","classes","src","burgerLogo","alt","NavigationItem","activeClassName","active","exact","to","link","children","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","Backdrop","show","SideDrawer","closed","Open","Close","join","Layout","showSideDrawer","sideDrawerOpenedHandler","setState","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","this","opened","Content","Component","instance","axios","create","baseURL","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","map","Array","_","i","key","arr","el","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasing","purchasable","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","cancelPurchase","continuePurchase","Spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","updatePurchaseState","acc","v","onInitIngredients","burger","textAlign","orderSummary","disabledInfo","onIngredientAdded","onIngredientRemoved","connect","builder","dispatch","burgerBuilderActions","get","then","data","catch","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","value","onChange","changed","name","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","email","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","checkValidity","rules","isValid","trim","inputChangedHandler","event","inputId","updatedOrderForm","updatedFormElement","target","orderHandler","preventDefault","formData","formElementId","order","orderData","onStartPurchase","formElementsArray","e","form","onSubmit","post","console","log","purchaseBurgerFail","orderActions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","purchasedRedirect","path","match","component","Order","Orders","onFetchOrders","myOrders","fetchedOrders","App","Boolean","window","location","hostname","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","myOrdersReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3598e129.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\",\"Toggle\":\"SideDrawer_Toggle__2q4pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst BASE_PRICE = 4;\nconst INGREDIENT_PRICES = {\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3,\n  salad: 0.5\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\n\nconst calcTotal = ingredients => {\n  let totalPrice = Object.keys(ingredients).reduce(\n    (totalPrice, igKey) =>\n      totalPrice + INGREDIENT_PRICES[igKey] * ingredients[igKey],\n    BASE_PRICE\n  );\n  return totalPrice;\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = (state, action) => {\n  const updatedState = {\n    ingredients: action.ingredients,\n    totalPrice: calcTotal(action.ingredients),\n    error: false\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, { error: true });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// burgerBuilderActions\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\n// orderActions\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\n// myOrdersActions\nexport const FETCH_ORDERS_INIT = \"FETCH_ORDERS_INIT\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst inititalState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orders, { id: action.id });\n  const updatedState = {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, { loading: true });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, { loading: false });\n\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, { purchased: false });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ORDERS_INIT:\n      return updateObject(state, { loading: true });\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, { orders: action.orders, loading: false });\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return updateObject(state, { loading: false });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport burgerLogo from \"../../assets/images/logo.png\";\nimport classes from \"./Logo.module.css\";\n\nconst Logo = props => (\n  <div className={classes.Logo}>\n    <img src={burgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      activeClassName={classes.active}\n      exact={props.exact}\n      to={props.link}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst NavigationItems = props => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>\n      Builder\n    </NavigationItem>\n    <NavigationItem link=\"/orders\">My Orders</NavigationItem>\n  </ul>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nconst DrawerToggle = props => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst Toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems />\n    </nav>\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\nconst Backdrop = props =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default Backdrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst SideDrawer = props => {\n  return (\n    <>\n      <Backdrop show={props.show} clicked={props.closed} />\n      <div\n        className={[\n          classes.SideDrawer,\n          props.show ? classes.Open : classes.Close\n        ].join(\" \")}\n      >\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default SideDrawer;\n","import React, { Component } from \"react\";\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerOpenedHandler = () => {\n    this.setState({\n      showSideDrawer: true\n    });\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({\n      showSideDrawer: false\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return {\n        showSideDrawer: !prevState.showSideDrawer\n      };\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n        <SideDrawer\n          show={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n          opened={this.sideDrawerOpenedHandler}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </>\n    );\n  }\n}\n\nexport default Layout;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://theburgerapp.firebaseio.com/\"\n});\n\nexport default instance;\n","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst BuildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Salad\", type: \"salad\" }\n];\n\nconst BuildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          label={ctrl.label}\n          key={ctrl.label}\n          type={ctrl.type}\n          disabled={props.disabled[ctrl.type]}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        onClick={props.purchasing}\n        disabled={!props.purchasable}\n      >\n        Order Now\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n  render() {\n    return (\n      <>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nconst OrderSummary = props => {\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n  return (\n    <>\n      <h3>Your Order</h3>\n      <p>A delicious burger with following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: ${props.price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to Checkout?</p>\n      <Button clicked={props.cancelPurchase} btnType=\"Danger\">\n        CANCEL\n      </Button>\n      <Button clicked={props.continuePurchase} btnType=\"Success\">\n        CONTINUE\n      </Button>\n    </>\n  );\n};\n\nexport default OrderSummary;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = props => <div className={classes.Loader}>Loading...</div>;\n\nexport default Spinner;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null\n      };\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({\n            error: error\n          });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n    render() {\n      return (\n        <>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as burgerBuilderActions from \"../../store/actions/burgerBuilderActions\";\nimport * as orderActions from \"../../store/actions/orderActions\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  purchaseHandler = () => {\n    this.setState({\n      purchasing: true\n    });\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"/checkout\");\n  };\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => ingredients[igKey])\n      .reduce((acc, v) => acc + v, 0);\n\n    return sum > 0;\n  };\n\n  render() {\n    let burger = this.props.error ? (\n      <p style={{ textAlign: \"center\" }}>Oops, Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    let orderSummary = null;\n    if (this.props.ingredients) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          cancelPurchase={this.purchaseCancelHandler}\n          continuePurchase={this.purchaseContinueHandler}\n          price={this.props.totalPrice}\n        />\n      );\n\n      let disabledInfo = {\n        ...this.props.ingredients\n      };\n      for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n      burger = (\n        <>\n          <Burger ingredients={this.props.ingredients} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\n            purchasing={this.purchaseHandler}\n          />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    error: state.builder.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingredientName =>\n      dispatch(burgerBuilderActions.addIngredient(ingredientName)),\n    onIngredientRemoved: ingredientName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingredientName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\n    onInitPurchase: () => dispatch(orderActions.purchaseInit())\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const addIngredient = ingredientName => {\n  return { type: actionTypes.ADD_INGREDIENT, ingredientName };\n};\n\nexport const removeIngredient = ingredientName => {\n  return { type: actionTypes.REMOVE_INGREDIENT, ingredientName };\n};\n\nconst setIngredients = ingredients => {\n  return { type: actionTypes.SET_INGREDIENTS, ingredients };\n};\n\nconst fetchIngredientsFailed = () => {\n  return { type: actionTypes.FETCH_INGREDIENTS_FAILED };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    id,\n    orderData\n  };\n};\n\nconst purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error\n  };\n};\n\nconst purchaseBurgerStart = () => {\n  return { type: actionTypes.PURCHASE_BURGER_START };\n};\n\nexport const purchaseBurger = orderData => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json\", orderData)\n      .then(response => {\n        console.log(response.data);\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../../components/UI/Button/Button\";\n\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div\n        style={{\n          width: \"100%\",\n          margin: \"auto\"\n        }}\n      >\n        <Burger ingredients={props.ingredients} />\n        <p>\n          <strong>Total Price: ${props.price.toFixed(2)}</strong>\n        </p>\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        Cancel\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = props => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  if (props.touched && props.invalid) inputClasses.push(classes.Invalid);\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props}\n          onChange={props.changed}\n        />\n      );\n      break;\n\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          name={props.name}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport * as orderActions from \"../../../store/actions/orderActions\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\n\nimport classes from \"./ContactData.module.css\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 4,\n          maxLength: 6\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\n            { value: \"fastest\", displayValue: \"Fastest\" }\n          ]\n        },\n        validation: {},\n        value: \"cheapest\",\n        valid: true,\n        touched: true\n      }\n    },\n    formIsValid: false\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.trim().length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.trim().length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (event, inputId) => {\n    const updatedOrderForm = { ...this.state.orderForm };\n    const updatedFormElement = { ...updatedOrderForm[inputId] };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    updatedOrderForm[inputId] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm, formIsValid });\n  };\n  orderHandler = event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      orderData: formData\n    };\n    this.props.onStartPurchase(order);\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={this.state.orderForm[key].elementType}\n          elementConfig={this.state.orderForm[key].elementConfig}\n          value={this.state.orderForm[key].value}\n          name={key}\n          invalid={!this.state.orderForm[key].valid}\n          touched={this.state.orderForm[key].touched}\n          changed={e => this.inputChangedHandler(e, key)}\n        />\n      );\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    price: state.builder.totalPrice,\n    loading: state.order.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartPurchase: orderData =>\n      dispatch(orderActions.purchaseBurger(orderData))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    if (!this.props.ingredients) {\n      return <Redirect to=\"/\" />;\n    }\n    const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n    return (\n      <div>\n        {purchasedRedirect}\n        <CheckoutSummary\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n        />\n\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst Order = props => (\n  <div className={classes.Order}>\n    <p>\n      Ingredients <br />\n      {Object.keys(props.ingredients).map(igKey => (\n        <span key={igKey}>{`${igKey} (${props.ingredients[igKey]})`}</span>\n      ))}\n    </p>\n    <p>\n      Price: <strong>USD {props.price.toFixed(2)}</strong>\n    </p>\n  </div>\n);\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as myOrdersActions from \"../../store/actions/myOrdersActions\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders();\n  }\n\n  render() {\n    if (this.props.loading) return <Spinner />;\n    return (\n      <div>\n        {this.props.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.myOrders.orders,\n    loading: state.myOrders.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: () => dispatch(myOrdersActions.fetchOrders())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nconst fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\n\nconst fetchOrdersFail = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL\n  };\n};\n\nconst fetchOrdersInit = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_INIT\n  };\n};\n\nexport const fetchOrders = () => {\n  return dispatch => {\n    dispatch(fetchOrdersInit());\n    axios\n      .get(\"/orders.json\")\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(error => {\n        dispatch(fetchOrdersFail());\n      });\n  };\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport classes from \"./App.module.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// redux Imports\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducer imports\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilderReducer\";\nimport orderReducer from \"./store/reducers/orderReducer\";\nimport myOrdersReducer from \"./store/reducers/myOrdersReducer\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst rootReducer = combineReducers({\n  builder: burgerBuilderReducer,\n  order: orderReducer,\n  myOrders: myOrdersReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n    // other store enhancers if any\n  )\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerApp\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}