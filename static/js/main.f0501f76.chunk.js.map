{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","store/utility.js","store/reducers/burgerBuilderReducer.js","store/actions/actionTypes.js","store/reducers/orderReducer.js","store/reducers/myOrdersReducer.js","store/reducers/authReducer.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","store/actions/authActions.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilderActions.js","store/actions/orderActions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/myOrdersActions.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","updateObject","oldObject","updatedProperties","INGREDIENT_PRICES","bacon","cheese","meat","salad","initialState","ingredients","totalPrice","error","building","addIngredient","state","action","updatedIngredient","ingredientName","updatedState","removeIngredient","setIngredients","Object","keys","reduce","igKey","reducer","type","inititalState","orders","loading","purchased","purchaseBurgerSuccess","newOrder","id","concat","token","userId","authRedirectPath","authStart","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","Logo","props","className","classes","src","burgerLogo","alt","NavigationItem","activeClassName","active","exact","to","link","children","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","Backdrop","show","SideDrawer","closed","Open","Close","join","Layout","showSideDrawer","sideDrawerOpenedHandler","setState","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","this","opened","Content","Component","connect","auth","instance","axios","create","baseURL","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","map","Array","_","i","key","arr","el","length","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasing","purchasable","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","cancelPurchase","continuePurchase","Spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","updatePurchaseState","acc","v","onInitIngredients","burger","textAlign","orderSummary","disabledInfo","onIngredientAdded","onIngredientRemoved","builder","burgerBuilderActions","get","then","data","catch","authActions","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","value","onChange","changed","name","options","option","displayValue","ContactData","orderForm","placeholder","validation","required","valid","email","street","zipCode","minLength","maxLength","country","deliveryMethod","formIsValid","checkValidity","rules","isValid","trim","inputChangedHandler","event","inputId","updatedOrderForm","updatedFormElement","target","orderHandler","preventDefault","formData","formElementId","order","orderData","onStartPurchase","formElementsArray","e","form","onSubmit","post","console","log","purchaseBurgerFail","orderActions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","purchasedRedirect","match","component","Order","Orders","onFetchOrders","myOrders","queryParams","fetchedOrders","myOrdersActions","Auth","isEmail","password","isSignUp","test","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","errorMessage","color","backgroundColor","borderRadius","border","padding","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignUp","routes","getItem","Boolean","window","location","hostname","composeEnhancers","composeWithDevTools","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","myOrdersReducer","authReducer","store","createStore","applyMiddleware","thunk","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0501f76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\",\"Toggle\":\"SideDrawer_Toggle__2q4pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nconst BASE_PRICE = 4;\nconst INGREDIENT_PRICES = {\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3,\n  salad: 0.5\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst calcTotal = ingredients => {\n  let totalPrice = Object.keys(ingredients).reduce(\n    (totalPrice, igKey) =>\n      totalPrice + INGREDIENT_PRICES[igKey] * ingredients[igKey],\n    BASE_PRICE\n  );\n  return totalPrice;\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = (state, action) => {\n  const updatedState = {\n    ingredients: action.ingredients,\n    totalPrice: calcTotal(action.ingredients),\n    error: false,\n    building: false\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, { error: true });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// burgerBuilderActions\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\n// orderActions\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\n// myOrdersActions\nexport const FETCH_ORDERS_INIT = \"FETCH_ORDERS_INIT\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\n// Auth actions\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst inititalState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orders, { id: action.id });\n  const updatedState = {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, { loading: true });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, { loading: false });\n\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, { purchased: false });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ORDERS_INIT:\n      return updateObject(state, { loading: true });\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, { orders: action.orders, loading: false });\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return updateObject(state, { loading: false });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport burgerLogo from \"../../assets/images/logo.png\";\nimport classes from \"./Logo.module.css\";\n\nconst Logo = props => (\n  <div className={classes.Logo}>\n    <img src={burgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      activeClassName={classes.active}\n      exact={props.exact}\n      to={props.link}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst NavigationItems = props => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>\n      Builder\n    </NavigationItem>\n    {props.isAuthenticated ? (\n      <NavigationItem link=\"/orders\">My Orders</NavigationItem>\n    ) : null}\n    {props.isAuthenticated ? (\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\n    ) : (\n      <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n    )}\n  </ul>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nconst DrawerToggle = props => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst Toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems isAuthenticated={props.isAuth} />\n    </nav>\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\nconst Backdrop = props =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default Backdrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst SideDrawer = props => {\n  return (\n    <>\n      <Backdrop show={props.show} clicked={props.closed} />\n      <div\n        className={[\n          classes.SideDrawer,\n          props.show ? classes.Open : classes.Close\n        ].join(\" \")}\n      >\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default SideDrawer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerOpenedHandler = () => {\n    this.setState({\n      showSideDrawer: true\n    });\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({\n      showSideDrawer: false\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return {\n        showSideDrawer: !prevState.showSideDrawer\n      };\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Toolbar\n          drawerToggleClicked={this.sideDrawerToggleHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <SideDrawer\n          show={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n          opened={this.sideDrawerOpenedHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://theburgerapp.firebaseio.com/\"\n});\n\nexport default instance;\n","import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nconst authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nconst authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken,\n    userId\n  };\n};\n\nconst authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCjTyqoftBtPjuyG_0vTFBqxln5UArCOlI\";\n\n    if (isSignUp) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCjTyqoftBtPjuyG_0vTFBqxln5UArCOlI\";\n    }\n\n    axios\n      .post(url, authData)\n      .then(response => {\n        console.log(response);\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", response.data.idToken);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(error => {\n        dispatch(authFail(error.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate > new Date()) {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst BuildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Salad\", type: \"salad\" }\n];\n\nconst BuildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          label={ctrl.label}\n          key={ctrl.label}\n          type={ctrl.type}\n          disabled={props.disabled[ctrl.type]}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        onClick={props.purchasing}\n        disabled={!props.purchasable}\n      >\n        {props.isAuth ? \"ORDER\" : \"SIGN UP TO ORDER\"}\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n  render() {\n    return (\n      <>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nconst OrderSummary = props => {\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n  return (\n    <>\n      <h3>Your Order</h3>\n      <p>A delicious burger with following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: ${props.price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to Checkout?</p>\n      <Button clicked={props.cancelPurchase} btnType=\"Danger\">\n        CANCEL\n      </Button>\n      <Button clicked={props.continuePurchase} btnType=\"Success\">\n        CONTINUE\n      </Button>\n    </>\n  );\n};\n\nexport default OrderSummary;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = props => <div className={classes.Loader}>Loading...</div>;\n\nexport default Spinner;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null\n      };\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({\n            error: error\n          });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n    render() {\n      return (\n        <>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as burgerBuilderActions from \"../../store/actions/burgerBuilderActions\";\nimport * as orderActions from \"../../store/actions/orderActions\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  purchaseHandler = () => {\n    if (this.props.isAuthenticated) {\n      this.setState({\n        purchasing: true\n      });\n    } else {\n      this.props.onSetAuthRedirectPath(\"/checkout\");\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"/checkout\");\n  };\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => ingredients[igKey])\n      .reduce((acc, v) => acc + v, 0);\n\n    return sum > 0;\n  };\n\n  render() {\n    let burger = this.props.error ? (\n      <p style={{ textAlign: \"center\" }}>Oops, Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    let orderSummary = null;\n    if (this.props.ingredients) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          cancelPurchase={this.purchaseCancelHandler}\n          continuePurchase={this.purchaseContinueHandler}\n          price={this.props.totalPrice}\n        />\n      );\n\n      let disabledInfo = {\n        ...this.props.ingredients\n      };\n      for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n      burger = (\n        <>\n          <Burger ingredients={this.props.ingredients} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\n            purchasing={this.purchaseHandler}\n            isAuth={this.props.isAuthenticated}\n          />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    error: state.builder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingredientName =>\n      dispatch(burgerBuilderActions.addIngredient(ingredientName)),\n    onIngredientRemoved: ingredientName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingredientName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\n    onInitPurchase: () => dispatch(orderActions.purchaseInit()),\n    onSetAuthRedirectPath: path =>\n      dispatch(authActions.setAuthRedirectPath(path))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const addIngredient = ingredientName => {\n  return { type: actionTypes.ADD_INGREDIENT, ingredientName };\n};\n\nexport const removeIngredient = ingredientName => {\n  return { type: actionTypes.REMOVE_INGREDIENT, ingredientName };\n};\n\nconst setIngredients = ingredients => {\n  return { type: actionTypes.SET_INGREDIENTS, ingredients };\n};\n\nconst fetchIngredientsFailed = () => {\n  return { type: actionTypes.FETCH_INGREDIENTS_FAILED };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    id,\n    orderData\n  };\n};\n\nconst purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error\n  };\n};\n\nconst purchaseBurgerStart = () => {\n  return { type: actionTypes.PURCHASE_BURGER_START };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(response => {\n        console.log(response.data);\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        console.log(error);\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../../components/UI/Button/Button\";\n\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div\n        style={{\n          width: \"100%\",\n          margin: \"auto\"\n        }}\n      >\n        <Burger ingredients={props.ingredients} />\n        <p>\n          <strong>Total Price: ${props.price.toFixed(2)}</strong>\n        </p>\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        Cancel\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = props => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  if (props.touched && props.invalid) inputClasses.push(classes.Invalid);\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props}\n          onChange={props.changed}\n        />\n      );\n      break;\n\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          name={props.name}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport * as orderActions from \"../../../store/actions/orderActions\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\n\nimport classes from \"./ContactData.module.css\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 4,\n          maxLength: 6\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\n            { value: \"fastest\", displayValue: \"Fastest\" }\n          ]\n        },\n        validation: {},\n        value: \"cheapest\",\n        valid: true,\n        touched: true\n      }\n    },\n    formIsValid: false\n  };\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.trim().length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.trim().length <= rules.maxLength && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (event, inputId) => {\n    const updatedOrderForm = { ...this.state.orderForm };\n    const updatedFormElement = { ...updatedOrderForm[inputId] };\n    updatedFormElement.value = event.target.value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = this.checkValidity(\n      updatedFormElement.value,\n      updatedFormElement.validation\n    );\n\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    updatedOrderForm[inputId] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm, formIsValid });\n  };\n  orderHandler = event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    };\n    this.props.onStartPurchase(order, this.props.token);\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={this.state.orderForm[key].elementType}\n          elementConfig={this.state.orderForm[key].elementConfig}\n          value={this.state.orderForm[key].value}\n          name={key}\n          invalid={!this.state.orderForm[key].valid}\n          touched={this.state.orderForm[key].touched}\n          changed={e => this.inputChangedHandler(e, key)}\n        />\n      );\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    price: state.builder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartPurchase: (orderData, token) =>\n      dispatch(orderActions.purchaseBurger(orderData, token))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    if (!this.props.ingredients) {\n      return <Redirect to=\"/\" />;\n    }\n    const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n    return (\n      <div>\n        {purchasedRedirect}\n        <CheckoutSummary\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n        />\n\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst Order = props => (\n  <div className={classes.Order}>\n    <p>\n      Ingredients <br />\n      {Object.keys(props.ingredients).map(igKey => (\n        <span key={igKey}>{`${igKey} (${props.ingredients[igKey]})`}</span>\n      ))}\n    </p>\n    <p>\n      Price: <strong>USD {props.price.toFixed(2)}</strong>\n    </p>\n  </div>\n);\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as myOrdersActions from \"../../store/actions/myOrdersActions\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    if (this.props.loading) return <Spinner />;\n    return (\n      <div>\n        {this.props.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.myOrders.orders,\n    loading: state.myOrders.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(myOrdersActions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nconst fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\n\nconst fetchOrdersFail = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL\n  };\n};\n\nconst fetchOrdersInit = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_INIT\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersInit());\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(error => {\n        dispatch(fetchOrdersFail());\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as authActions from \"../../store/actions/authActions\";\n\nimport classes from \"./Auth.module.css\";\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"E-Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    },\n    isSignUp: true\n  };\n\n  componentDidMount() {\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n\n  checkValidity = (value, rules) => {\n    let isValid = true;\n\n    if (rules.required) {\n      isValid = value.trim() !== \"\" && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.trim().length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.trim().length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      let isEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n        value.trim()\n      );\n      isValid = isEmail && isValid;\n    }\n\n    return isValid;\n  };\n\n  inputChangedHandler = (e, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: e.target.value,\n        valid: this.checkValidity(\n          e.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true\n      }\n    };\n    this.setState({\n      controls: updatedControls\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignUp\n    );\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return {\n        isSignUp: !prevState.isSignUp\n      };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={this.state.controls[key].elementType}\n          elementConfig={this.state.controls[key].elementConfig}\n          value={this.state.controls[key].value}\n          name={key}\n          invalid={!this.state.controls[key].valid}\n          touched={this.state.controls[key].touched}\n          changed={e => this.inputChangedHandler(e, key)}\n        />\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <p\n          style={{\n            color: \"red\",\n            backgroundColor: \"pink\",\n            borderRadius: \"5px\",\n            border: \"2px solid red\",\n            padding: \"5px\"\n          }}\n        >\n          {this.props.error.message}\n        </p>\n      );\n    }\n    return (\n      <div className={classes.Auth}>\n        {this.props.isAuthenticated ? (\n          <Redirect to={this.props.authRedirectPath} />\n        ) : null}\n        <h2>{this.state.isSignUp ? \"SIGN UP\" : \"SIGN IN\"}</h2>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spinner />\n        ) : (\n          <form onSubmit={this.submitHandler}>\n            {formElementsArray}\n            <Button btnType=\"Success\">SUBMIT</Button>\n          </form>\n        )}\n        <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\n          SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    buildingBurger: state.builder.building,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(authActions.auth(email, password, isSignUp)),\n    onSetAuthRedirectPath: () => dispatch(authActions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as authActions from \"../../../store/actions/authActions\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as authActions from \"./store/actions/authActions\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <div className={classes.App}>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authActions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// redux Imports\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducer imports\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilderReducer\";\nimport orderReducer from \"./store/reducers/orderReducer\";\nimport myOrdersReducer from \"./store/reducers/myOrdersReducer\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nconst rootReducer = combineReducers({\n  builder: burgerBuilderReducer,\n  order: orderReducer,\n  myOrders: myOrdersReducer,\n  auth: authReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n    // other store enhancers if any\n  )\n);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerApp\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}