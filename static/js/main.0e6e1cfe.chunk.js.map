{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","shared/utility.js","store/reducers/burgerBuilderReducer.js","store/actions/actionTypes.js","store/reducers/orderReducer.js","store/reducers/myOrdersReducer.js","store/reducers/authReducer.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","axios-orders.js","store/actions/authActions.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilderActions.js","store/actions/orderActions.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","store/actions/myOrdersActions.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","updateObject","oldObject","updatedProperties","checkValidity","value","rules","isValid","required","trim","minLength","length","maxLength","isEmail","test","INGREDIENT_PRICES","bacon","cheese","meat","salad","initialState","ingredients","totalPrice","error","building","addIngredient","state","action","updatedIngredient","ingredientName","updatedState","removeIngredient","setIngredients","Object","keys","reduce","igKey","reducer","type","inititalState","orders","loading","purchased","purchaseBurgerSuccess","newOrder","id","concat","token","userId","authRedirectPath","authStart","authSuccess","idToken","authFail","authLogout","setAuthRedirectPath","path","Logo","props","className","classes","src","burgerLogo","alt","NavigationItem","activeClassName","active","exact","to","link","children","NavigationItems","isAuthenticated","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","Backdrop","show","SideDrawer","closed","Open","Close","join","Layout","showSideDrawer","sideDrawerOpenedHandler","setState","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","this","opened","Content","Component","connect","auth","instance","axios","create","baseURL","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Burger","transformedIngredients","map","Array","_","i","key","arr","el","BuildControl","Label","label","Less","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasing","purchasable","Modal","nextProps","nextState","modalClosed","style","transform","opacity","Button","btnType","OrderSummary","ingredientSummary","textTransform","cancelPurchase","continuePurchase","Spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchaseHandler","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","updatePurchaseState","acc","v","onInitIngredients","burger","textAlign","orderSummary","disabledInfo","onIngredientAdded","onIngredientRemoved","builder","burgerBuilderActions","get","then","data","catch","authActions","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","Input","inputElement","inputClasses","InputElement","touched","invalid","Invalid","elementType","elementConfig","onChange","changed","name","options","option","displayValue","ContactData","orderForm","placeholder","validation","valid","email","street","zipCode","country","deliveryMethod","formIsValid","inputChangedHandler","event","inputId","updatedFormElement","target","updatedOrderForm","orderHandler","preventDefault","formData","formElementId","order","orderData","onStartPurchase","formElementsArray","e","form","onSubmit","post","purchaseBurgerFail","orderActions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","purchasedRedirect","match","component","Order","Orders","onFetchOrders","myOrders","queryParams","fetchedOrders","myOrdersActions","Auth","password","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","errorMessage","color","backgroundColor","borderRadius","border","padding","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onTryAutoSignUp","routes","getItem","Boolean","window","location","hostname","middleware","composeWithDevTools","composeEnhancers","applyMiddleware","thunk","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","myOrdersReducer","authReducer","store","createStore","app","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.0e6e1cfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\",\"Toggle\":\"SideDrawer_Toggle__2q4pL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load3\":\"Spinner_load3__3VkKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n\nexport const checkValidity = (value, rules) => {\n  let isValid = true;\n\n  if (rules.required) {\n    isValid = value.trim() !== \"\" && isValid;\n  }\n\n  if (rules.minLength) {\n    isValid = value.trim().length >= rules.minLength && isValid;\n  }\n\n  if (rules.maxLength) {\n    isValid = value.trim().length <= rules.maxLength && isValid;\n  }\n\n  if (rules.isEmail) {\n    let isEmail = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n      value.trim()\n    );\n    isValid = isEmail && isValid;\n  }\n\n  return isValid;\n};\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\nconst BASE_PRICE = 4;\nconst INGREDIENT_PRICES = {\n  bacon: 0.7,\n  cheese: 0.4,\n  meat: 1.3,\n  salad: 0.5\n};\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false\n};\n\nconst calcTotal = ingredients => {\n  let totalPrice = Object.keys(ingredients).reduce(\n    (totalPrice, igKey) =>\n      totalPrice + INGREDIENT_PRICES[igKey] * ingredients[igKey],\n    BASE_PRICE\n  );\n  return totalPrice;\n};\n\nconst addIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst removeIngredient = (state, action) => {\n  const updatedIngredient = {\n    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n  };\n  const updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  const updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n    building: true\n  };\n  return updateObject(state, updatedState);\n};\n\nconst setIngredients = (state, action) => {\n  const updatedState = {\n    ingredients: action.ingredients,\n    totalPrice: calcTotal(action.ingredients),\n    error: false,\n    building: false\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return removeIngredient(state, action);\n\n    case actionTypes.SET_INGREDIENTS:\n      return setIngredients(state, action);\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, { error: true });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// burgerBuilderActions\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const REMOVE_INGREDIENT = \"REMOVE_INGREDIENT\";\nexport const SET_INGREDIENTS = \"SET_INGREDIENTS\";\nexport const FETCH_INGREDIENTS_FAILED = \"FETCH_INGREDIENTS_FAILED\";\n\n// orderActions\nexport const PURCHASE_BURGER_START = \"PURCHASE_BURGER_START\";\nexport const PURCHASE_BURGER_SUCCESS = \"PURCHASE_BURGER_SUCCESS\";\nexport const PURCHASE_BURGER_FAIL = \"PURCHASE_BURGER_FAIL\";\nexport const PURCHASE_INIT = \"PURCHASE_INIT\";\n\n// myOrdersActions\nexport const FETCH_ORDERS_INIT = \"FETCH_ORDERS_INIT\";\nexport const FETCH_ORDERS_SUCCESS = \"FETCH_ORDERS_SUCCESS\";\nexport const FETCH_ORDERS_FAIL = \"FETCH_ORDERS_FAIL\";\n\n// Auth actions\nexport const AUTH_START = \"AUTH_START\";\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\nexport const AUTH_FAIL = \"AUTH_FAIL\";\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\nexport const SET_AUTH_REDIRECT_PATH = \"SET_AUTH_REDIRECT_PATH\";\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst inititalState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nconst purchaseBurgerSuccess = (state, action) => {\n  const newOrder = updateObject(action.orders, { id: action.id });\n  const updatedState = {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  };\n  return updateObject(state, updatedState);\n};\n\nconst reducer = (state = inititalState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_BURGER_START:\n      return updateObject(state, { loading: true });\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return updateObject(state, { loading: false });\n\n    case actionTypes.PURCHASE_INIT:\n      return updateObject(state, { purchased: false });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  orders: [],\n  loading: false\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_ORDERS_INIT:\n      return updateObject(state, { loading: true });\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return updateObject(state, { orders: action.orders, loading: false });\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return updateObject(state, { loading: false });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../../shared/utility\";\n\nconst initialState = {\n  token: null,\n  userId: null,\n  error: null,\n  loading: false,\n  authRedirectPath: \"/\"\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.idToken,\n    userId: action.userId,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, { token: null, userId: null });\n};\n\nconst setAuthRedirectPath = (state, action) => {\n  return updateObject(state, { authRedirectPath: action.path });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return authStart(state, action);\n\n    case actionTypes.AUTH_SUCCESS:\n      return authSuccess(state, action);\n\n    case actionTypes.AUTH_FAIL:\n      return authFail(state, action);\n\n    case actionTypes.AUTH_LOGOUT:\n      return authLogout(state, action);\n\n    case actionTypes.SET_AUTH_REDIRECT_PATH:\n      return setAuthRedirectPath(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport burgerLogo from \"../../assets/images/logo.png\";\nimport classes from \"./Logo.module.css\";\n\nconst Logo = props => (\n  <div className={classes.Logo}>\n    <img src={burgerLogo} alt=\"MyBurger\"></img>\n  </div>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport classes from \"./NavigationItem.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavigationItem = props => (\n  <li className={classes.NavigationItem}>\n    <NavLink\n      activeClassName={classes.active}\n      exact={props.exact}\n      to={props.link}\n    >\n      {props.children}\n    </NavLink>\n  </li>\n);\n\nexport default NavigationItem;\n","import React from \"react\";\nimport classes from \"./NavigationItems.module.css\";\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\n\nconst NavigationItems = props => (\n  <ul className={classes.NavigationItems}>\n    <NavigationItem link=\"/\" exact>\n      Builder\n    </NavigationItem>\n    {props.isAuthenticated ? (\n      <NavigationItem link=\"/orders\">My Orders</NavigationItem>\n    ) : null}\n    {props.isAuthenticated ? (\n      <NavigationItem link=\"/logout\">Logout</NavigationItem>\n    ) : (\n      <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n    )}\n  </ul>\n);\n\nexport default NavigationItems;\n","import React from \"react\";\nimport classes from \"./DrawerToggle.module.css\";\n\nconst DrawerToggle = props => (\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n);\n\nexport default DrawerToggle;\n","import React from \"react\";\nimport classes from \"./Toolbar.module.css\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\n\nconst Toolbar = props => (\n  <header className={classes.Toolbar}>\n    <DrawerToggle clicked={props.drawerToggleClicked} />\n    <div className={classes.Logo}>\n      <Logo />\n    </div>\n    <nav className={classes.DesktopOnly}>\n      <NavigationItems isAuthenticated={props.isAuth} />\n    </nav>\n  </header>\n);\n\nexport default Toolbar;\n","import React from \"react\";\nimport classes from \"./Backdrop.module.css\";\nconst Backdrop = props =>\n  props.show ? (\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\n  ) : null;\n\nexport default Backdrop;\n","import React from \"react\";\nimport Logo from \"../../Logo/Logo\";\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\nimport classes from \"./SideDrawer.module.css\";\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\n\nconst SideDrawer = props => {\n  return (\n    <>\n      <Backdrop show={props.show} clicked={props.closed} />\n      <div\n        className={[\n          classes.SideDrawer,\n          props.show ? classes.Open : classes.Close\n        ].join(\" \")}\n        onClick={props.closed}\n      >\n        <div className={classes.Logo}>\n          <Logo />\n        </div>\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuth} />\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default SideDrawer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./Layout.module.css\";\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  };\n\n  sideDrawerOpenedHandler = () => {\n    this.setState({\n      showSideDrawer: true\n    });\n  };\n\n  sideDrawerClosedHandler = () => {\n    this.setState({\n      showSideDrawer: false\n    });\n  };\n\n  sideDrawerToggleHandler = () => {\n    this.setState(prevState => {\n      return {\n        showSideDrawer: !prevState.showSideDrawer\n      };\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Toolbar\n          drawerToggleClicked={this.sideDrawerToggleHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <SideDrawer\n          show={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n          opened={this.sideDrawerOpenedHandler}\n          isAuth={this.props.isAuthenticated}\n        />\n        <main className={classes.Content}>{this.props.children}</main>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Layout);\n","import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"https://theburgerapp.firebaseio.com/\"\n});\n\nexport default instance;\n","import axios from \"axios\";\n\nimport * as actionTypes from \"./actionTypes\";\n\nconst authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nconst authSuccess = (idToken, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken,\n    userId\n  };\n};\n\nconst authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\n\nexport const auth = (email, password, isSignUp) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email,\n      password,\n      returnSecureToken: true\n    };\n    let url =\n      \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCjTyqoftBtPjuyG_0vTFBqxln5UArCOlI\";\n\n    if (isSignUp) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCjTyqoftBtPjuyG_0vTFBqxln5UArCOlI\";\n    }\n\n    axios\n      .post(url, authData)\n      .then(response => {\n        const expirationDate = new Date(\n          new Date().getTime() + response.data.expiresIn * 1000\n        );\n        localStorage.setItem(\"token\", response.data.idToken);\n        localStorage.setItem(\"expirationDate\", expirationDate);\n        localStorage.setItem(\"userId\", response.data.localId);\n        dispatch(authSuccess(response.data.idToken, response.data.localId));\n        dispatch(checkAuthTimeout(response.data.expiresIn));\n      })\n      .catch(error => {\n        dispatch(authFail(error.response.data.error));\n      });\n  };\n};\n\nexport const setAuthRedirectPath = path => {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n      if (expirationDate > new Date()) {\n        const userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(token, userId));\n        dispatch(\n          checkAuthTimeout(\n            (expirationDate.getTime() - new Date().getTime()) / 1000\n          )\n        );\n      } else {\n        dispatch(logout());\n      }\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst BuildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" },\n  { label: \"Salad\", type: \"salad\" }\n];\n\nconst BuildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          label={ctrl.label}\n          key={ctrl.label}\n          type={ctrl.type}\n          disabled={props.disabled[ctrl.type]}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n        />\n      ))}\n      <button\n        className={classes.OrderButton}\n        onClick={props.purchasing}\n        disabled={!props.purchasable}\n      >\n        {props.isAuth ? \"ORDER\" : \"SIGN UP TO ORDER\"}\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControls;\n","import React, { Component } from \"react\";\nimport classes from \"./Modal.module.css\";\nimport Backdrop from \"../Backdrop/Backdrop\";\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children\n    );\n  }\n  render() {\n    return (\n      <>\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed} />\n        <div\n          className={classes.Modal}\n          style={{\n            transform: this.props.show ? \"translateY(0)\" : \"translateY(-100vh)\",\n            opacity: this.props.show ? \"1\" : \"0\"\n          }}\n        >\n          {this.props.children}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\nimport classes from \"./Button.module.css\";\n\nconst Button = props => (\n  <button\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\n    onClick={props.clicked}\n    disabled={props.disabled}\n  >\n    {props.children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport Button from \"../../UI/Button/Button\";\n\nconst OrderSummary = props => {\n  const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\n    return (\n      <li key={igKey}>\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:{\" \"}\n        {props.ingredients[igKey]}\n      </li>\n    );\n  });\n  return (\n    <>\n      <h3>Your Order</h3>\n      <p>A delicious burger with following ingredients:</p>\n      <ul>{ingredientSummary}</ul>\n      <p>\n        <strong>Total Price: ${props.price.toFixed(2)}</strong>\n      </p>\n      <p>Continue to Checkout?</p>\n      <Button clicked={props.cancelPurchase} btnType=\"Danger\">\n        CANCEL\n      </Button>\n      <Button clicked={props.continuePurchase} btnType=\"Success\">\n        CONTINUE\n      </Button>\n    </>\n  );\n};\n\nexport default OrderSummary;\n","import React from \"react\";\nimport classes from \"./Spinner.module.css\";\n\nconst Spinner = props => <div className={classes.Loader}>Loading...</div>;\n\nexport default Spinner;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../../components/UI/Modal/Modal\";\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        error: null\n      };\n      this.reqInterceptor = axios.interceptors.request.use(req => {\n        this.setState({\n          error: null\n        });\n        return req;\n      });\n      this.resInterceptor = axios.interceptors.response.use(\n        res => res,\n        error => {\n          this.setState({\n            error: error\n          });\n        }\n      );\n    }\n\n    componentWillUnmount() {\n      axios.interceptors.request.eject(this.reqInterceptor);\n      axios.interceptors.response.eject(this.resInterceptor);\n    }\n\n    errorConfirmedHandler = () => {\n      this.setState({\n        error: null\n      });\n    };\n    render() {\n      return (\n        <>\n          <Modal\n            show={this.state.error}\n            modalClosed={this.errorConfirmedHandler}\n          >\n            {this.state.error ? this.state.error.message : null}\n          </Modal>\n          <WrappedComponent {...this.props} />\n        </>\n      );\n    }\n  };\n};\n\nexport default withErrorHandler;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport * as burgerBuilderActions from \"../../store/actions/burgerBuilderActions\";\nimport * as orderActions from \"../../store/actions/orderActions\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false\n  };\n\n  componentDidMount() {\n    this.props.onInitIngredients();\n  }\n\n  purchaseHandler = () => {\n    if (this.props.isAuthenticated) {\n      this.setState({\n        purchasing: true\n      });\n    } else {\n      this.props.onSetAuthRedirectPath(\"/checkout\");\n      this.props.history.push(\"/auth\");\n    }\n  };\n\n  purchaseCancelHandler = () => {\n    this.setState({\n      purchasing: false\n    });\n  };\n\n  purchaseContinueHandler = () => {\n    this.props.onInitPurchase();\n    this.props.history.push(\"/checkout\");\n  };\n\n  updatePurchaseState = ingredients => {\n    const sum = Object.keys(ingredients)\n      .map(igKey => ingredients[igKey])\n      .reduce((acc, v) => acc + v, 0);\n\n    return sum > 0;\n  };\n\n  render() {\n    let burger = this.props.error ? (\n      <p style={{ textAlign: \"center\" }}>Oops, Ingredients can't be loaded!</p>\n    ) : (\n      <Spinner />\n    );\n    let orderSummary = null;\n    if (this.props.ingredients) {\n      orderSummary = (\n        <OrderSummary\n          ingredients={this.props.ingredients}\n          cancelPurchase={this.purchaseCancelHandler}\n          continuePurchase={this.purchaseContinueHandler}\n          price={this.props.totalPrice}\n        />\n      );\n\n      let disabledInfo = {\n        ...this.props.ingredients\n      };\n      for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n      burger = (\n        <>\n          <Burger ingredients={this.props.ingredients} />\n          <BuildControls\n            ingredientAdded={this.props.onIngredientAdded}\n            ingredientRemoved={this.props.onIngredientRemoved}\n            disabled={disabledInfo}\n            price={this.props.totalPrice}\n            purchasable={this.updatePurchaseState(this.props.ingredients)}\n            purchasing={this.purchaseHandler}\n            isAuth={this.props.isAuthenticated}\n          />\n        </>\n      );\n    }\n\n    return (\n      <>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}\n        >\n          {orderSummary}\n        </Modal>\n        {burger}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    error: state.builder.error,\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded: ingredientName =>\n      dispatch(burgerBuilderActions.addIngredient(ingredientName)),\n    onIngredientRemoved: ingredientName =>\n      dispatch(burgerBuilderActions.removeIngredient(ingredientName)),\n    onInitIngredients: () => dispatch(burgerBuilderActions.initIngredients()),\n    onInitPurchase: () => dispatch(orderActions.purchaseInit()),\n    onSetAuthRedirectPath: path =>\n      dispatch(authActions.setAuthRedirectPath(path))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(BurgerBuilder, axios));\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const addIngredient = ingredientName => {\n  return { type: actionTypes.ADD_INGREDIENT, ingredientName };\n};\n\nexport const removeIngredient = ingredientName => {\n  return { type: actionTypes.REMOVE_INGREDIENT, ingredientName };\n};\n\nconst setIngredients = ingredients => {\n  return { type: actionTypes.SET_INGREDIENTS, ingredients };\n};\n\nconst fetchIngredientsFailed = () => {\n  return { type: actionTypes.FETCH_INGREDIENTS_FAILED };\n};\n\nexport const initIngredients = () => {\n  return dispatch => {\n    axios\n      .get(\"/ingredients.json\")\n      .then(response => {\n        dispatch(setIngredients(response.data));\n      })\n      .catch(error => {\n        dispatch(fetchIngredientsFailed());\n      });\n  };\n};\n","import axios from \"../../axios-orders\";\nimport * as actionTypes from \"./actionTypes\";\n\nconst purchaseBurgerSuccess = (id, orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    id,\n    orderData\n  };\n};\n\nconst purchaseBurgerFail = error => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error\n  };\n};\n\nconst purchaseBurgerStart = () => {\n  return { type: actionTypes.PURCHASE_BURGER_START };\n};\n\nexport const purchaseBurger = (orderData, token) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart());\n    axios\n      .post(\"/orders.json?auth=\" + token, orderData)\n      .then(response => {\n        dispatch(purchaseBurgerSuccess(response.data.name, orderData));\n      })\n      .catch(error => {\n        dispatch(purchaseBurgerFail(error));\n      });\n  };\n};\n\nexport const purchaseInit = () => {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\n","import React from \"react\";\nimport Burger from \"../../Burger/Burger\";\nimport Button from \"../../../components/UI/Button/Button\";\n\nimport classes from \"./CheckoutSummary.module.css\";\n\nconst CheckoutSummary = props => {\n  return (\n    <div className={classes.CheckoutSummary}>\n      <h1>We hope it tastes well!</h1>\n      <div\n        style={{\n          width: \"100%\",\n          margin: \"auto\"\n        }}\n      >\n        <Burger ingredients={props.ingredients} />\n        <p>\n          <strong>Total Price: ${props.price.toFixed(2)}</strong>\n        </p>\n      </div>\n      <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>\n        Cancel\n      </Button>\n      <Button btnType=\"Success\" clicked={props.checkoutContinued}>\n        Continue\n      </Button>\n    </div>\n  );\n};\n\nexport default CheckoutSummary;\n","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst Input = props => {\n  let inputElement = null;\n  let inputClasses = [classes.InputElement];\n  if (props.touched && props.invalid) inputClasses.push(classes.Invalid);\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputClasses.join(\" \")}\n          {...props}\n          onChange={props.changed}\n        />\n      );\n      break;\n\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputClasses.join(\" \")}\n          value={props.value}\n          onChange={props.changed}\n          name={props.name}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputClasses.join(\" \")}\n          {...props.elementConfig}\n          value={props.value}\n          name={props.name}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Button from \"../../../components/UI/Button/Button\";\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from \"../../../components/UI/Input/Input\";\nimport * as orderActions from \"../../../store/actions/orderActions\";\nimport axios from \"../../../axios-orders\";\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\nimport { updateObject, checkValidity } from \"../../../shared/utility\";\n\nimport classes from \"./ContactData.module.css\";\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Your Name\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"Your Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      street: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Street\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      zipCode: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"ZIP Code\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 4,\n          maxLength: 6\n        },\n        valid: false,\n        touched: false\n      },\n      country: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"text\",\n          placeholder: \"Country\"\n        },\n        value: \"\",\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false\n      },\n      deliveryMethod: {\n        elementType: \"select\",\n        elementConfig: {\n          options: [\n            { value: \"cheapest\", displayValue: \"Cheapest\" },\n            { value: \"fastest\", displayValue: \"Fastest\" }\n          ]\n        },\n        validation: {},\n        value: \"cheapest\",\n        valid: true,\n        touched: true\n      }\n    },\n    formIsValid: false\n  };\n\n  inputChangedHandler = (event, inputId) => {\n    const updatedFormElement = updateObject(this.state.orderForm[inputId], {\n      value: event.target.value,\n      touched: true,\n      valid: checkValidity(\n        event.target.value,\n        this.state.orderForm[inputId].validation\n      )\n    });\n    const updatedOrderForm = updateObject(this.state.orderForm, {\n      [inputId]: updatedFormElement\n    });\n    let formIsValid = true;\n    for (let inputId in updatedOrderForm) {\n      formIsValid = updatedOrderForm[inputId].valid && formIsValid;\n    }\n    updatedOrderForm[inputId] = updatedFormElement;\n    this.setState({ orderForm: updatedOrderForm, formIsValid });\n  };\n  orderHandler = event => {\n    event.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.orderForm) {\n      formData[formElementId] = this.state.orderForm[formElementId].value;\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      orderData: formData,\n      userId: this.props.userId\n    };\n    this.props.onStartPurchase(order, this.props.token);\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={this.state.orderForm[key].elementType}\n          elementConfig={this.state.orderForm[key].elementConfig}\n          value={this.state.orderForm[key].value}\n          name={key}\n          invalid={!this.state.orderForm[key].valid}\n          touched={this.state.orderForm[key].touched}\n          changed={e => this.inputChangedHandler(e, key)}\n        />\n      );\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray}\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\n          ORDER\n        </Button>\n      </form>\n    );\n    if (this.props.loading) {\n      form = <Spinner />;\n    }\n    return (\n      <div className={classes.ContactData}>\n        <h4>Enter your Contact Data</h4>\n        {form}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    price: state.builder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartPurchase: (orderData, token) =>\n      dispatch(orderActions.purchaseBurger(orderData, token))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(ContactData, axios));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport ContactData from \"./ContactData/ContactData\";\n\nclass Checkout extends Component {\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  };\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace(\"/checkout/contact-data\");\n  };\n\n  render() {\n    if (!this.props.ingredients) {\n      return <Redirect to=\"/\" />;\n    }\n    const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\n    return (\n      <div>\n        {purchasedRedirect}\n        <CheckoutSummary\n          ingredients={this.props.ingredients}\n          price={this.props.totalPrice}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}\n        />\n\n        <Route\n          path={this.props.match.path + \"/contact-data\"}\n          component={ContactData}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.builder.ingredients,\n    totalPrice: state.builder.totalPrice,\n    purchased: state.order.purchased\n  };\n};\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from \"react\";\nimport classes from \"./Order.module.css\";\n\nconst Order = props => (\n  <div className={classes.Order}>\n    <p>\n      Ingredients <br />\n      {Object.keys(props.ingredients).map(igKey => (\n        <span key={igKey}>{`${igKey} (${props.ingredients[igKey]})`}</span>\n      ))}\n    </p>\n    <p>\n      Price: <strong>USD {props.price.toFixed(2)}</strong>\n    </p>\n  </div>\n);\n\nexport default Order;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport * as myOrdersActions from \"../../store/actions/myOrdersActions\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../axios-orders\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\n\nclass Orders extends Component {\n  componentDidMount() {\n    this.props.onFetchOrders(this.props.token, this.props.userId);\n  }\n\n  render() {\n    if (this.props.loading) return <Spinner />;\n    return (\n      <div>\n        {this.props.orders.map(order => (\n          <Order\n            key={order.id}\n            ingredients={order.ingredients}\n            price={order.price}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.myOrders.orders,\n    loading: state.myOrders.loading,\n    token: state.auth.token,\n    userId: state.auth.userId\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token, userId) =>\n      dispatch(myOrdersActions.fetchOrders(token, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withErrorHandler(Orders, axios));\n","import * as actionTypes from \"./actionTypes\";\nimport axios from \"../../axios-orders\";\n\nconst fetchOrdersSuccess = orders => {\n  return {\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders\n  };\n};\n\nconst fetchOrdersFail = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_FAIL\n  };\n};\n\nconst fetchOrdersInit = () => {\n  return {\n    type: actionTypes.FETCH_ORDERS_INIT\n  };\n};\n\nexport const fetchOrders = (token, userId) => {\n  return dispatch => {\n    dispatch(fetchOrdersInit());\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\n    axios\n      .get(\"/orders.json\" + queryParams)\n      .then(res => {\n        const fetchedOrders = [];\n        for (let key in res.data) {\n          fetchedOrders.push({\n            ...res.data[key],\n            id: key\n          });\n        }\n        dispatch(fetchOrdersSuccess(fetchedOrders));\n      })\n      .catch(error => {\n        dispatch(fetchOrdersFail());\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport * as authActions from \"../../store/actions/authActions\";\nimport { updateObject, checkValidity } from \"../../shared/utility\";\n\nimport classes from \"./Auth.module.css\";\n\nclass Auth extends Component {\n  state = {\n    controls: {\n      email: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"email\",\n          placeholder: \"E-Mail\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          isEmail: true\n        },\n        valid: false,\n        touched: false\n      },\n      password: {\n        elementType: \"input\",\n        elementConfig: {\n          type: \"password\",\n          placeholder: \"Password\"\n        },\n        value: \"\",\n        validation: {\n          required: true,\n          minLength: 6\n        },\n        valid: false,\n        touched: false\n      }\n    },\n    isSignUp: true\n  };\n\n  componentDidMount() {\n    if (!this.props.buildingBurger && this.props.authRedirectPath !== \"/\") {\n      this.props.onSetAuthRedirectPath();\n    }\n  }\n\n  inputChangedHandler = (e, controlName) => {\n    const updatedControls = updateObject(this.state.controls, {\n      [controlName]: updateObject(this.state.controls[controlName], {\n        value: e.target.value,\n        valid: checkValidity(\n          e.target.value,\n          this.state.controls[controlName].validation\n        ),\n        touched: true\n      })\n    });\n\n    this.setState({\n      controls: updatedControls\n    });\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    this.props.onAuth(\n      this.state.controls.email.value,\n      this.state.controls.password.value,\n      this.state.isSignUp\n    );\n  };\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => {\n      return {\n        isSignUp: !prevState.isSignUp\n      };\n    });\n  };\n\n  render() {\n    const formElementsArray = [];\n    for (let key in this.state.controls) {\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={this.state.controls[key].elementType}\n          elementConfig={this.state.controls[key].elementConfig}\n          value={this.state.controls[key].value}\n          name={key}\n          invalid={!this.state.controls[key].valid}\n          touched={this.state.controls[key].touched}\n          changed={e => this.inputChangedHandler(e, key)}\n        />\n      );\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <p\n          style={{\n            color: \"red\",\n            backgroundColor: \"pink\",\n            borderRadius: \"5px\",\n            border: \"2px solid red\",\n            padding: \"5px\"\n          }}\n        >\n          {this.props.error.message}\n        </p>\n      );\n    }\n    return (\n      <div className={classes.Auth}>\n        {this.props.isAuthenticated ? (\n          <Redirect to={this.props.authRedirectPath} />\n        ) : null}\n        <h2>{this.state.isSignUp ? \"SIGN UP\" : \"SIGN IN\"}</h2>\n        {errorMessage}\n        {this.props.loading ? (\n          <Spinner />\n        ) : (\n          <form onSubmit={this.submitHandler}>\n            {formElementsArray}\n            <Button btnType=\"Success\">SUBMIT</Button>\n          </form>\n        )}\n        <Button btnType=\"Danger\" clicked={this.switchAuthModeHandler}>\n          SWITCH TO {this.state.isSignUp ? \"SIGN IN\" : \"SIGN UP\"}\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    buildingBurger: state.builder.building,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignUp) =>\n      dispatch(authActions.auth(email, password, isSignUp)),\n    onSetAuthRedirectPath: () => dispatch(authActions.setAuthRedirectPath(\"/\"))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nimport * as authActions from \"../../../store/actions/authActions\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.onLogout();\n  }\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(authActions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport classes from \"./App.module.css\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\nimport Checkout from \"./containers/Checkout/Checkout\";\nimport Orders from \"./containers/Orders/Orders\";\nimport Auth from \"./containers/Auth/Auth\";\nimport Logout from \"./containers/Auth/Logout/Logout\";\nimport * as authActions from \"./store/actions/authActions\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignUp();\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/auth\" component={Auth} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <div className={classes.App}>\n        <Layout>{routes}</Layout>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignUp: () => dispatch(authActions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React imports\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\n// redux Imports\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\n// Reducer imports\nimport burgerBuilderReducer from \"./store/reducers/burgerBuilderReducer\";\nimport orderReducer from \"./store/reducers/orderReducer\";\nimport myOrdersReducer from \"./store/reducers/myOrdersReducer\";\nimport authReducer from \"./store/reducers/authReducer\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers = composeWithDevTools({\n  // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n});\n\nlet middleware = composeEnhancers(applyMiddleware(thunk));\nif (process.env.NODE_ENV === \"production\") {\n  middleware = applyMiddleware(thunk);\n}\n\nconst rootReducer = combineReducers({\n  builder: burgerBuilderReducer,\n  order: orderReducer,\n  myOrders: myOrdersReducer,\n  auth: authReducer\n});\n\nconst store = createStore(rootReducer, middleware);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/BurgerApp\">\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}