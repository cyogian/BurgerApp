{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Layout/Layout.module.css","components/Burger/Burger.module.css","components/Burger/BuildControls/BuildControls.module.css","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","props","className","classes","Content","children","BurgerIngredient","ingredient","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","Component","Burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","BuildControl","Label","label","Less","onClick","removed","disabled","More","added","controls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","totalPrice","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","updatedPrice","setState","removeIngredientHandler","oldCount","priceSubtraction","disabledInfo","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b9e3915f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2WLOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\"};","import React from \"react\";\nimport classes from \"./Layout.module.css\";\n\nconst Layout = props => (\n  <>\n    <div>Toolbar, Sidebar, Backdrop</div>\n    <main className={classes.Content}>{props.children}</main>\n  </>\n);\n\nexport default Layout;\n","import React, { Component } from \"react\";\nimport classes from \"./BurgerIngredient.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass BurgerIngredient extends Component {\n  render() {\n    let ingredient = null;\n    switch (this.props.type) {\n      case \"bread-bottom\":\n        ingredient = <div className={classes.BreadBottom}></div>;\n        break;\n      case \"bread-top\":\n        ingredient = (\n          <div className={classes.BreadTop}>\n            <div className={classes.Seeds1}></div>\n            <div className={classes.Seeds2}></div>\n          </div>\n        );\n        break;\n      case \"meat\":\n        ingredient = <div className={classes.Meat}></div>;\n        break;\n      case \"cheese\":\n        ingredient = <div className={classes.Cheese}></div>;\n        break;\n      case \"salad\":\n        ingredient = <div className={classes.Salad}></div>;\n        break;\n      case \"bacon\":\n        ingredient = <div className={classes.Bacon}></div>;\n        break;\n\n      default:\n        ingredient = null;\n    }\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;\n","import React from \"react\";\nimport classes from \"./Burger.module.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nconst Burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients)\n    .map(igKey => {\n      return [...Array(props.ingredients[igKey])].map((_, i) => (\n        <BurgerIngredient key={igKey + i} type={igKey} />\n      ));\n    })\n    .reduce((arr, el) => {\n      return arr.concat(el);\n    }, []);\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = <p>Please start adding ingredients!</p>;\n  }\n\n  return (\n    <div className={classes.Burger}>\n      <BurgerIngredient type=\"bread-top\" />\n      {transformedIngredients}\n      <BurgerIngredient type=\"bread-bottom\" />\n    </div>\n  );\n};\n\nexport default Burger;\n","import React from \"react\";\nimport classes from \"./BuildControl.module.css\";\n\nconst BuildControl = props => {\n  return (\n    <div className={classes.BuildControl}>\n      <div className={classes.Label}>{props.label}</div>\n      <button\n        className={classes.Less}\n        onClick={props.removed}\n        disabled={props.disabled}\n      >\n        Less\n      </button>\n      <button className={classes.More} onClick={props.added}>\n        More\n      </button>\n    </div>\n  );\n};\n\nexport default BuildControl;\n","import React from \"react\";\nimport classes from \"./BuildControls.module.css\";\nimport BuildControl from \"./BuildControl/BuildControl\";\n\nconst controls = [\n  { label: \"Salad\", type: \"salad\" },\n  { label: \"Bacon\", type: \"bacon\" },\n  { label: \"Cheese\", type: \"cheese\" },\n  { label: \"Meat\", type: \"meat\" }\n];\n\nconst BuildControls = props => {\n  return (\n    <div className={classes.BuildControls}>\n      <p>\n        Current Price: <strong>${props.price.toFixed(2)}</strong>\n      </p>\n      {controls.map(ctrl => (\n        <BuildControl\n          label={ctrl.label}\n          key={ctrl.label}\n          type={ctrl.type}\n          disabled={props.disabled[ctrl.type]}\n          added={() => props.ingredientAdded(ctrl.type)}\n          removed={() => props.ingredientRemoved(ctrl.type)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default BuildControls;\n","import React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0\n    },\n    totalPrice: 4\n  };\n  addIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const updatedPrice = oldPrice + priceAddition;\n    this.setState({\n      ingredients: updatedIngredients,\n      totalPrice: updatedPrice\n    });\n  };\n\n  removeIngredientHandler = type => {\n    const oldCount = this.state.ingredients[type];\n    if (oldCount <= 0) return;\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients\n    };\n    updatedIngredients[type] = updatedCount;\n    const priceSubtraction = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const updatedPrice = oldPrice - priceSubtraction;\n    this.setState({\n      ingredients: updatedIngredients,\n      totalPrice: updatedPrice\n    });\n  };\n\n  render() {\n    let disabledInfo = {\n      ...this.state.ingredients\n    };\n    for (let key in disabledInfo) disabledInfo[key] = disabledInfo[key] <= 0;\n\n    return (\n      <>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          ingredientAdded={this.addIngredientHandler}\n          ingredientRemoved={this.removeIngredientHandler}\n          disabled={disabledInfo}\n          price={this.state.totalPrice}\n        />\n      </>\n    );\n  }\n}\n\nexport default BurgerBuilder;\n","import React from \"react\";\nimport classes from \"./App.module.css\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBuilder/BurgerBuilder\";\n\nfunction App() {\n  return (\n    <div className={classes.App}>\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}